/* Generated By:JavaCC: Do not edit this line. AbjadParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AbjadParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NUM = 6;
  /** RegularExpression Id. */
  int LP = 7;
  /** RegularExpression Id. */
  int RP = 8;
  /** RegularExpression Id. */
  int QOUTE = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int WHILE = 12;
  /** RegularExpression Id. */
  int FOR = 13;
  /** RegularExpression Id. */
  int READ = 14;
  /** RegularExpression Id. */
  int PRINT = 15;
  /** RegularExpression Id. */
  int TRUE = 16;
  /** RegularExpression Id. */
  int FALSE = 17;
  /** RegularExpression Id. */
  int ELIF = 18;
  /** RegularExpression Id. */
  int INT = 19;
  /** RegularExpression Id. */
  int Float = 20;
  /** RegularExpression Id. */
  int Char = 21;
  /** RegularExpression Id. */
  int Pointer = 22;
  /** RegularExpression Id. */
  int bool = 23;
  /** RegularExpression Id. */
  int assign = 24;
  /** RegularExpression Id. */
  int until = 25;
  /** RegularExpression Id. */
  int VAR = 26;
  /** RegularExpression Id. */
  int FUN = 27;
  /** RegularExpression Id. */
  int CLMN = 28;
  /** RegularExpression Id. */
  int FAS = 29;
  /** RegularExpression Id. */
  int ONCE = 30;
  /** RegularExpression Id. */
  int OF = 31;
  /** RegularExpression Id. */
  int TO = 32;
  /** RegularExpression Id. */
  int PLUS = 33;
  /** RegularExpression Id. */
  int MULTIPLY = 34;
  /** RegularExpression Id. */
  int EXPONENT = 35;
  /** RegularExpression Id. */
  int MODULUS = 36;
  /** RegularExpression Id. */
  int COMP = 37;
  /** RegularExpression Id. */
  int ASSIGN = 38;
  /** RegularExpression Id. */
  int BITWISE = 39;
  /** RegularExpression Id. */
  int ID = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<NUM>",
    "<LP>",
    "<RP>",
    "\"\\\"\"",
    "<IF>",
    "<ELSE>",
    "<WHILE>",
    "<FOR>",
    "<READ>",
    "<PRINT>",
    "<TRUE>",
    "<FALSE>",
    "<ELIF>",
    "<INT>",
    "<Float>",
    "<Char>",
    "<Pointer>",
    "<bool>",
    "<assign>",
    "<until>",
    "<VAR>",
    "<FUN>",
    "\":\"",
    "\",\"",
    "<ONCE>",
    "<OF>",
    "<TO>",
    "<PLUS>",
    "<MULTIPLY>",
    "\"^\"",
    "\"%\"",
    "<COMP>",
    "<ASSIGN>",
    "<BITWISE>",
    "<ID>",
    "\"->\"",
    "\" { \"",
    "\" }\"",
  };

}
